<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>workload identity on CloudBees Technologists</title>
    <link>https://technologists.dev/tags/workload-identity/</link>
    <description>Recent content in workload identity on CloudBees Technologists</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Nov 2019 05:05:15 -0400</lastBuildDate>
    
	<atom:link href="https://technologists.dev/tags/workload-identity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless Preview Environments and GitOps with CloudBees Core and Google Cloud Run</title>
      <link>https://technologists.dev/posts/cloud-run-with-core/</link>
      <pubDate>Wed, 20 Nov 2019 05:05:15 -0400</pubDate>
      
      <guid>https://technologists.dev/posts/cloud-run-with-core/</guid>
      <description>Google Cloud Run is Google Cloud&amp;rsquo;s serverless platform for stateless containerized applications that leverage HTTP and event driven workloads. Cloud Run can be fully managed or you can use Cloud Run for Anthos to deploy applications in an Anthos GKE cluster running on Google Cloud or on-premises.
CloudBees Core is an enterprise version of Jenkins that provides better scalability, manageability, security and availability by running on and leveraging Kubernetes.</description>
    </item>
    
    <item>
      <title>Unprivileged Container Image Builds with img and Jenkins on Kubernetes</title>
      <link>https://technologists.dev/posts/building-images-with-img/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://technologists.dev/posts/building-images-with-img/</guid>
      <description>Why use img for container builds? As more organizations turn to containers and Kubernetes to manage their CI/CD workloads, numerous strategies have emerged to handle the actual building of container images within these containerized environments. However, each of these approaches have not been without their security drawbacks (see Kurt Madel&amp;rsquo;s recent post on &amp;ldquo;Securely Building Container Images on Kubernetes&amp;rdquo; for a rundown of these approaches and their security implications.)</description>
    </item>
    
    <item>
      <title>Securely Using Cloud Services from Jenkins Kubernetes Agents</title>
      <link>https://technologists.dev/posts/best-practices-for-cloudbees-core-jenkins-on-kubernetes/securely-using-cloud-services-from-jenkins-kubernetes-agents/</link>
      <pubDate>Sun, 20 Oct 2019 09:05:15 -0400</pubDate>
      
      <guid>https://technologists.dev/posts/best-practices-for-cloudbees-core-jenkins-on-kubernetes/securely-using-cloud-services-from-jenkins-kubernetes-agents/</guid>
      <description>In the second part of this series on best practices for Jenkins (and CloudBees Core) on Kubernetes we will continue to look at security. In this post we will look at how to reduce security risk of using cloud services from Jenkins Kubernetes agents, similar to how the previous post in this series showed how Kubernetes Pod Security Policies can be used with Jenkins Kubernetes agents to limit the security risk of Jenkins agent containers.</description>
    </item>
    
  </channel>
</rss>