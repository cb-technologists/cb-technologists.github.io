<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jenkins on CloudBees Technologists</title>
    <link>https://cb-technologists.github.io/tags/jenkins/</link>
    <description>Recent content in jenkins on CloudBees Technologists</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jul 2019 17:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://cb-technologists.github.io/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Self-Updating Jenkins: GitOps for Jenkins Configuration</title>
      <link>https://cb-technologists.github.io/posts/cjd-casc/</link>
      <pubDate>Wed, 03 Jul 2019 17:00:00 -0400</pubDate>
      
      <guid>https://cb-technologists.github.io/posts/cjd-casc/</guid>
      <description>In this blog post, we&amp;rsquo;ll walk through creating a self-updating instance of the CloudBees Jenkins Distribution, with all configuration stored as code in a GitHub repository.
We&amp;rsquo;ll deploy the CJD master as a StatefulSet in a Kubernetes cluster, configure the master using the Jenkins Configuration as Code plugin, and set up a TLS certificate through cert-manager. Finally, we&amp;rsquo;ll seed a Pipeline job that updates the master upon commit to the Git repository that contains the configuration - enabling GitOps for Jenkins itself.</description>
    </item>
    
    <item>
      <title>CloudBees&#39; Cross Team Collaboration for Asynchronous DevSecOps</title>
      <link>https://cb-technologists.github.io/posts/cloudbees-cross-team-and-dev-sec-ops/</link>
      <pubDate>Mon, 10 Jun 2019 07:50:46 -0400</pubDate>
      
      <guid>https://cb-technologists.github.io/posts/cloudbees-cross-team-and-dev-sec-ops/</guid>
      <description>What is Cross Team Collaboration? CloudBees&amp;rsquo; Cross Team Collaboration provides the ability to publish an event from a Jenkins job that triggers any other Jenkins job on the same master or different masters that are listening for that event. It is basically a light-weight PubSub for CloudBees Core Masters connected to CloudBees Operations Center. Jenkins has had the ability to trigger other jobs for quite a while now (and with CloudBees this is even easy to do across Masters), but it always required that the upstream job be aware of the downstream job(s) to be triggered.</description>
    </item>
    
    <item>
      <title>Jenkins Plugins: The Good, the Bad and the Ugly</title>
      <link>https://cb-technologists.github.io/posts/jenkins-plugins-good-bad-ugly/</link>
      <pubDate>Thu, 30 May 2019 05:50:46 -0400</pubDate>
      
      <guid>https://cb-technologists.github.io/posts/jenkins-plugins-good-bad-ugly/</guid>
      <description>There are over 1600 Jenkins plugins and that is both a blessing and a curse. Of those 1600 plugins only a small percentage are well maintained and tested, and even fewer (140 of 1600+) are part of the CloudBees Assurance Program (CAP) as verified and/or compatible plugins - well tested to interoperate with the rest of the CAP plugins (and their dependencies) and with a specific LTS version of Jenkins.</description>
    </item>
    
    <item>
      <title>Extending Jenkins X for Traditional Deployments with CloudBees Flow</title>
      <link>https://cb-technologists.github.io/posts/jenkins-x-flow-integration/</link>
      <pubDate>Wed, 29 May 2019 12:47:46 -0400</pubDate>
      
      <guid>https://cb-technologists.github.io/posts/jenkins-x-flow-integration/</guid>
      <description>Jenkins X is quickly becoming the de facto standard for high performing teams wanting to do CI/CD in a highly scalable and fault tolerant environment. For those who havenâ€™t gotten the opportunity to try out Jenkins X, it allows teams to run CI/CD workloads natively in a Kubernetes environment while taking advantage of modern operating patterns like GitOps and serverless architectures. For teams wanting to modernize their continuous integration and continuous deployment capabilities, Jenkins X is the go to solution.</description>
    </item>
    
  </channel>
</rss>